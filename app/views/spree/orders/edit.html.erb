<% @body_id = 'cart' %>
<div data-hook="cart_container">
<h1><%= Spree.t(:cart_tableHeader_title)%></h1>

  <% if @order.line_items.empty? %>
    <div data-hook="empty_cart">
      <div class="alert alert-info"><%= Spree.t(:your_cart_is_empty) %></div>
      <p><%= link_to Spree.t(:continue_shopping), products_path, class: 'btn btn-default' %></p>
    </div>
  <% else %>
    <div data-hook="outside_cart_form">
      <%= form_for @order, url: update_cart_path, html: { id: 'update-cart' } do |order_form| %>
        <div data-hook="inside_cart_form">
          <div data-hook="cart_items" class="table-responsive">
            <%= render partial: 'form', locals: { order_form: order_form } %>
          </div>
        </div>
      <% end %>
  <% end %>
</div>

<script>
  var vm = new Vue({
    el: '#cart',
    data: {
      order: {},
      selected: [],
      options:[],
      prices:[]
    },
    computed: {
      "price_total": function() {
        var sum = 0.0;
        this.prices.forEach(function(item){
          sum += item.total;
        })
        return sum;
      },
    },
    methods: {
      changeItem(rowId, event) {
        var from = this.selected[rowId];
        var to = event.target.value;
        var a = to.split(".");
        var qty = a[0];
        var span = a[1];
        var sku = this.order.line_items[rowId].variant.sku;
        sku = sku.slice(0, 3) + span + sku.slice(4);
        this.updateLineItem(rowId, sku, qty);
        console.log(rowId + " from: " + this.selected[rowId] + " to: " + event.target.value)
      },
      updateAll: function() {
        this.updatePrices();
        this.updateOptions();
      },
      updatePrices: function() {
        var that = this;
        var a = [];
        this.order.line_items.forEach(function(item){
          var h = {};
          h['single'] = item.single_display_amount;
          h['total'] = (+h['single'].slice(1)) * item.quantity;
          a.push(h)
        })
        this.prices = a;
      },
      updateOptions: function() {
        var options = [];
        var a = [];
        var that = this;
        this.order.line_items.forEach(function(item){
          a.push(that.valueFromItem(item));
          options.push(that.timespanOptionsFromItem(item));
        })
        this.selected = a;
        this.options = options;
      },
      timespanOptionsFromItem: function(item) {
        var t1 = ['<%= Spree.t(:"homepage.bar_month") %>', '<%= Spree.t(:"homepage.bar_week") %>', '<%= Spree.t(:"homepage.bar_day") %>'];
        var t2 = ['<%= Spree.t(:"homepage.bar_months") %>', '<%= Spree.t(:"homepage.bar_weeks") %>', '<%= Spree.t(:"homepage.bar_days") %>'];
        var p1 = item.quantity;
        var t = t1
        if (p1 > 1) {
          t = t2 
        }
        return t.map(function(x){
          return {text: p1 + " " + x, value: p1 + "." + x[0]};
        })
      },
      valueFromItem: function(item) {
        return item.quantity + "." + item.variant.sku[3]; // 11m, 3d
      },
      minus: function(index) {
        var qty = this.order.line_items[index].quantity;
        if (qty > 1) {
          this.order.line_items[index].quantity -= 1;
          this.updateAll();
        }

      },
      plus: function(index) {
        this.order.line_items[index].quantity += 1;
        this.updateAll();
      },
      updateLineItem: function(index, sku, qty) {
        $.ajax({
          type: 'PUT',
          url: '/api/v1/orders/' + this.order.number + '/line_items/' + this.order.line_items[index].id + '?line_item[sku]='+sku+'&line_item[quantity]='+qty+'&order_token=<%= @order.guest_token %>',
          success: function(data) {
            window.location.reload();
          },
        })
      }
    },
    ready: function() {
      $.ajax({
        url: '/api/v1/orders/<%= @order.number %>?order_token=<%= @order.guest_token %>',
        error: function() {
        },
        success: function(data) {
          vm.order = data;
          vm.updateAll();
        },
        type: 'GET'
      });
    }
  })
  

</script>
