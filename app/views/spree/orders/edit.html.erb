<% @body_id = 'cart' %>
<div data-hook="cart_container" v-if="initialized" v-cloak>
  <div class="container">
    <% if @order.line_items.empty? %>

      <div style="text-align: center; margin-top: 200px">
        <p style="font-weight: 600; font-size:22px; line-height: 1.14"><%= Spree.t(:cart_empty) %></p>
        <p style="color: #474c5d"><%= Spree.t(:cart_empty_detail) %></p>
        <p><%= link_to Spree.t(:cart_summary_keepShopping), root_path+"#section-1", class: 'button', style: 'margin-top:30px' %></p>
      <div>

    <% else %>
      <h1><%= Spree.t(:cart_tableHeader_title)%></h1>
      <div data-hook="outside_cart_form">
        <%= form_for @order, url: update_cart_path, html: { id: 'update-cart' } do |order_form| %>
          <%= render partial: 'form', locals: { order_form: order_form } %>
        <% end %>
      </div>
    <% end %>
  </div>

<script>
  var vm = new Vue({
    el: '#cart',
    data: {
      order: {},
      selected: [],
      options:[],
      prices:[],
      initialized: false
    },
    computed: {
      "price_total": function() {
        var sum = 0.0;
        this.prices.forEach(function(item){
          sum += item.total;
        })
        return sum;
      },
    },
    methods: {
      changeItem: function(rowId, event) {
        var from = this.selected[rowId];
        var to = event.target.value;
        var a = to.split(".");
        var qty = a[0];
        var span = a[1];
        var sku = this.order.line_items[rowId].variant.sku;
        if (sku[3] == 'm') {
          sku = sku.slice(0, 3) + 'w' + sku.slice(4);
        }
        else {
          sku = sku.slice(0, 3) + 'm' + sku.slice(4);
        }
        this.updateLineItem(rowId, sku, qty, true);
        console.log(rowId + " from: " + this.selected[rowId] + " to: " + event.target.value)
      },
      updateAll: function() {
        this.updatePrices();
        this.updateOptions();
      },
      updatePrices: function() {
        var a = [];
        this.order.line_items.forEach(function(item){
          var h = {};
          h['single'] = item.single_display_amount;
          h['total'] = (+h['single'].slice(1)) * item.quantity;
          a.push(h)
        })
        this.prices = a;
      },
      updateOptions: function() {
        var options = [];
        var a = [];
        var that = this;
        this.order.line_items.forEach(function(item){
          a.push(that.valueFromItem(item));
          options.push(that.timespanOptionsFromItem(item));
        })
        this.selected = a;
        this.options = options;
      },
      timespanOptionsFromItem: function(item) {
        var t1 = ['<%= Spree.t(:"homepage.bar_month") %>', '<%= Spree.t(:"homepage.bar_week") %>'];
        var t2 = ['<%= Spree.t(:"homepage.bar_months") %>', '<%= Spree.t(:"homepage.bar_weeks") %>'];
        var p1 = item.quantity;
        var t = t1
        if (p1 > 1) {
          t = t2
        }
        return t.map(function(x){
          return {text: p1 + " " + x, value: p1 + "." + x};
        })
      },
      valueFromItem: function(item) {
        var t1 = ['<%= Spree.t(:"homepage.bar_month") %>', '<%= Spree.t(:"homepage.bar_week") %>',  '<%= Spree.t(:"homepage.bar_day") %>'];
        var t2 = ['<%= Spree.t(:"homepage.bar_months") %>', '<%= Spree.t(:"homepage.bar_weeks") %>',  '<%= Spree.t(:"homepage.bar_days") %>'];
        var p1 = item.quantity;
        var t = t1
        if (p1 > 1) {
          t = t2
        }

        if (item.variant.sku[3] == 'm') {
          return item.quantity + "." + t[0]; // 11m, 3d
        } else if (item.variant.sku[3] == 'w') {
          return item.quantity + "." + t[1]; // 11m, 3d
        } else {
          return item.quantity + "." + t[2]; // 11m, 3d
        }
      },
      minus: function(index) {
        var qty = this.order.line_items[index].quantity;
        if (qty > 1) {
          var sku = this.order.line_items[index].variant.sku;
          this.order.line_items[index].quantity -= 1;
          this.updateLineItem(index, sku, this.order.line_items[index].quantity, false);
        }

      },
      plus: function(index) {
        var sku = this.order.line_items[index].variant.sku;
        this.order.line_items[index].quantity += 1;
        this.updateLineItem(index, sku, this.order.line_items[index].quantity, false);
      },
      updateLineItem: function(index, sku, qty, skuChanged) {
        $.ajax({
          type: 'PUT',
          url: '/api/v1/orders/' + this.order.number + '/line_items/' + this.order.line_items[index].id + '?line_item[sku]='+sku+'&line_item[quantity]='+ qty + '&skuChanged='+ skuChanged +'&order_token=<%= @order.guest_token %>',
          success: function(data) {
            window.location.reload();
          },
        })
      },
      deleteLineItem: function(index) {
        $.ajax({
          type: 'DELETE',
          url: '/api/v1/orders/' + this.order.number + '/line_items/' + this.order.line_items[index].id +'?order_token=<%= @order.guest_token %>',
          success: function(data) {
            window.location.reload();
          }
        })
      }
    },
    ready: function() {
      $.ajax({
        url: '/api/v1/orders/<%= @order.number %>?order_token=<%= @order.guest_token %>',
        error: function() {
        },
        success: function(data) {
          vm.order = data;
          vm.updateAll();
          vm.initialized = true
        },
        type: 'GET'
      });
    }
  })


</script>
